= TolkienSetupOprofile =

This TolkienSetup sub-guide details how to install and use the [http://oprofile.sourceforge.net/news/ OProfile] tool.  OProfile is a profiling tool that allows monitoring and analysis of the applications running on a computer to determine whice system and library functions are being called the most.  It can be useful when debugging performance problems.


== Installing OProfile ==

References:
 * http://lbrandy.com/blog/2008/11/oprofile-profiling-in-linux-for-fun-and-profit/

Install the oprofile package:
{{{
# apt-get install oprofile
}}}


== Running OProfile ==

References:
 * http://lbrandy.com/blog/2008/11/oprofile-profiling-in-linux-for-fun-and-profit/
 * http://www.nabble.com/Oprofile---VMware:-workaround-doesn%27t-work-td14741159.html

There's an issue with running OProfile on VMWare-hosted machines.  This will cause OProfile to not generate any samples.  When running opreport and other commands, errors similar to the following may be displayed:
{{{
opreport error: No sample file found: try running opcontrol --dump or
specify a session containing sample files
}}}

Fortunately, there's an easy workaround to solve this problem.  Simply uninitialize OProfile and pass the "`timer=1`" flag to its kernel module:
{{{
# opcontrol --deinit
# modprobe oprofile timer=1
}}}

To start OProfile's sampling, run the following commands:
{{{
# opcontrol --no-vmlinux
# opcontrol --reset
# opcontrol --start
}}}

To have OProfile dump all its sampling data out to disk where it can be analyzed, run the following command:
{{{
# opcontrol --dump
}}}

To view the OProfile report, run the following command:
{{{
$ opreport -lt1
}}}


== Installing Symbols ==

OProfile requires that the symbols be available for the binaries being sampled.  Otherwise, it will be unable to discern what's going on inside the binaries and will generate output like this:
{{{
Profiling through timer interrupt
samples  %        app name                 symbol name
2705     72.8914  libpython2.5.so.1.0      (no symbols)
435      11.7219  libc-2.7.so              (no symbols)
327       8.8116  no-vmlinux               (no symbols)
}}}

To resolve this, simply install the "`-dbg`" versions of the packages whose binaries are being monitored.  For example, to install symbols for `libc6` and `python2.5`, run the following command:
{{{
# apt-get install libc6-dbg python2.5-dbg
}}}
