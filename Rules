#!/usr/bin/env ruby

# A few helpful tips about the Rules file:
#
# * The string given to #compile and #route are matching patterns for
#   identifiers--not for paths. Therefore, you can’t match on extension.
#
# * The order of rules is important: for each item, only the first matching
#   rule is applied.
#
# * Item identifiers start and end with a slash (e.g. “/about/” for the file
#   “content/about.html”). To select all children, grandchildren, … of an
#   item, use the pattern “/about/*/”; “/about/*” will also select the parent,
#   because “*” matches zero or more characters.

preprocess do
	# Topics, blog articles, etc. may be unpublished by setting the following meta attribute:
	# publish: false
	items.delete_if { |item| item[:publish] == false }

	#copy_static
	create_tag_pages
	add_update_item_attributes

end

compile '/stylesheet/' do
  # don’t filter or layout
end

#compile '/topics/*', :rep => :summary do
#  rep.filter :erb
#  rep.filter :kramdown
#  rep.layout 'topic_summary'
#end

#route '/topics/*', :rep => :summary do
#  nil # Don't create output files for summaries (they will be manually included in pages).
#end

compile '/css/*' do
  filter :less
  filter :rainpress
end

route '/css/*' do
  item.identifier.chop + '.css'
end

compile '/assets/*' do
end

route '/assets/*' do
  # Convert '/assets/foo.bar/ to '/foo.bar'
  item.identifier[7..-2]
end

compile '/wiki/*' do
  filter :erb
  filter :tracwiki
  filter :kramdown
  layout 'default'
end

route '/wiki/*' do
  '/it' + item.identifier + 'index.html'
end

#compile '/content/*' do
#  filter :erb
#  filter :tracwiki
#  filter :kramdown
#  layout 'default'
#end

# I'm envisioining the following site hierarchy:
# http://davishq.com/
#   index.html           Links to each person's stuff.
#                        Perhaps I should just redirect to /karl unless/until 
#                        someone else wants to join the site?
#                        Even if this page exists, it should not have a layout 
#                        in common with /karl; each person should be able to 
#                        use whatever layout they'd like.
#   /karl
#     index.html         A replacement for the MRC "About" page with links to child content, GitHub, Google+, etc.
#     /it
#       ...              All of the current IT documentation content.
#     /blog
#       ...              All of the madrivercode blog entries, plus any new ones.

compile '*' do
  # item[:extension] returns 'html.erb' for multi-dotted filename
  ext = item[:extension].nil? ? nil : item[:extension].split('.').last

  # Apply filters, based on each item's extension
  if ext == 'markdown' || ext == 'md'
    filter :erb
    filter :kramdown
    filter :colorize_syntax
  elsif ext == 'erb'
		filter :erb
  elsif ext.nil?
		# This will be the case for auto-generated tag items.
		filter :erb
  else
    raise "No filter configured for '#{item.identifier}' with extension of '#{item[:extension]}' in the Rules file."
  end

  # Apply layout(s).
	if !item[:layout].nil?
		layout item[:layout]
	elsif item[:kind] == "topic"
		layout 'default'
	elsif item[:kind] == "article"
		layout 'article'
	else
		# No layout for .xml files, etc.
	end
end

route '*' do
	route_path(item)
end

layout '*', :erb
